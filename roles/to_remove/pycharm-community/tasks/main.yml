---
# [inspired_by] https://github.com/archlinuxcn/repo/blob/master/pycharm-community/PKGBUILD
- name: check directorys
  file:
    path="{{item}}"
    owner=root
    group=root
    state=directory
    mode=0755
  with_items:
    - "{{ glx_pycharm_community_cache_dir }}"
    - "{{ glx_pycharm_community_opt_dir }}"

- name: download {{ glx_pycharm_community_source }}
  get_url:
    url="{{ glx_pycharm_community_source }}"
    dest="{{ glx_pycharm_community_cache_dir }}/{{ glx_pycharm_community_name }}-{{ glx_pycharm_community_version }}.tar.gz"
    validate_certs=False
  when: glx_pycharm_community_source
  register: glx_pycharm_community_download

- debug: msg="{{ glx_pycharm_community_download }}"

- name: delete {{ glx_pycharm_community_opt_dir }}/{{ glx_pycharm_community_name }}
  file:
    path={{ glx_pycharm_community_opt_dir }}/{{ glx_pycharm_community_name }}
    state=absent
  #when: glx_pycharm_community_download.changed

- name: unarchive {{ glx_pycharm_community_download.dest }}
  unarchive:
    src="{{ glx_pycharm_community_download.dest }}"
    dest="{{ glx_pycharm_community_cache_dir }}"
    copy=no
  #when: glx_pycharm_community_download.changed

- name: check directorys
  file:
    path="{{item}}"
    owner=root
    group=root
    state=directory
    mode=0755
  with_items:
    - "{{ glx_pycharm_community_opt_dir }}/{{ glx_pycharm_community_name }}"

- name: copy files to "{{ glx_pycharm_community_opt_dir }}/{{ glx_pycharm_community_name }}"
  shell: cp -R {{ glx_pycharm_community_cache_dir }}/{{ glx_pycharm_community_name }}-{{ glx_pycharm_community_version }}/* {{ glx_pycharm_community_opt_dir }}/{{ glx_pycharm_community_name }}

- name: delete {{ glx_pycharm_community_opt_dir }}/{{ glx_pycharm_community_name }}/bin/libyjpagent-linux64.so
  file:
    path="{{ glx_pycharm_community_opt_dir }}/{{ glx_pycharm_community_name }}/bin/libyjpagent-linux64.so"
    state=absent
  when: not ansible_architecture == "x86_64"

- name: delete {{ glx_pycharm_community_opt_dir }}/{{ glx_pycharm_community_name }}/bin/fsnotifier64
  file:
    path="{{ glx_pycharm_community_opt_dir }}/{{ glx_pycharm_community_name }}/bin/fsnotifier64"
    state=absent
  when: not ansible_architecture == "x86_64"

- name: check "-Dawt.useSystemAAFontSettings=on" option inside pycharm.vmoptions file
  lineinfile:
    dest="{{ glx_pycharm_community_opt_dir }}/{{ glx_pycharm_community_name }}/bin/pycharm.vmoptions"
    state=present
    regexp="^-Dawt.useSystemAAFontSettings"
    line="-Dawt.useSystemAAFontSettings=on"
  when: not ansible_architecture == "x86_64"

- name: check "-Dswing.aatext=true" option inside pycharm.vmoptions file
  lineinfile:
    dest="{{ glx_pycharm_community_opt_dir }}/{{ glx_pycharm_community_name }}/bin/pycharm.vmoptions"
    state=present
    regexp="^-Dswing.aatext="
    line="-Dswing.aatext=true"
  when: not ansible_architecture == "x86_64"

- name: check "-Dawt.useSystemAAFontSettings=on" option inside pycharm64.vmoptions file
  lineinfile:
    dest="{{ glx_pycharm_community_opt_dir }}/{{ glx_pycharm_community_name }}/bin/pycharm64.vmoptions"
    state=present
    regexp="^-Dawt.useSystemAAFontSettings"
    line="-Dawt.useSystemAAFontSettings=on"
  when: ansible_architecture == "x86_64"

- name: check "-Dswing.aatext=true" option inside pycharm64.vmoptions file
  lineinfile:
    dest="{{ glx_pycharm_community_opt_dir }}/{{ glx_pycharm_community_name }}/bin/pycharm64.vmoptions"
    state=present
    regexp="^-Dswing.aatext="
    line="-Dswing.aatext=true"
  when: ansible_architecture == "x86_64"

- name: create symbolic link
  file:
    src="{{ glx_pycharm_community_opt_dir }}/{{ glx_pycharm_community_name }}/bin/pycharm.sh"
    dest=/usr/bin/pycharm
    state=link

- name: creat /usr/share/applications/{{ glx_pycharm_community_name }}.desktop is ok
  template:
    src=templates/{{ glx_pycharm_community_name }}.desktop.j2
    dest=/usr/share/applications/{{ glx_pycharm_community_name }}.desktop
    backup=no