---
- hosts: localhost
  become: no
  gather_facts: no

  vars:
# configuration variables
    tf_stack: scw
    # tf_workspace: 
# utils variables    
    project_dir: "{{ (playbook_dir + '/..') | realpath }}" 
    tf_stack_dir: "{{ project_dir }}/terraform/{{ tf_stack }}"

    ssh_private_key_file: "{{ project_dir }}/keys/{{ tf_workspace }}.key"
    ssh_public_key_file: "{{ ssh_private_key_file }}.pub"
    
    ready_host_name: "{{ tf_workspace }}"
    raw_host_name: "raw_{{ tf_workspace }}"
    clan_name: "{{ tf_stack }}_{{ tf_workspace }}_clan"
    ready_host_vars_dir: "{{ project_dir }}/host_vars/{{ tf_workspace }}"
    ready_host_vars_file: "{{ ready_host_vars_dir }}/tf_vars.yml"

    raw_host_vars_dir: "{{ project_dir }}/host_vars/raw_{{ tf_workspace }}"
    raw_host_vars_file: "{{ raw_host_vars_dir }}/tf_vars.yml"

  tasks:
    - name: Sanity checks
      assert:
        that:
          - tf_workspace is defined
          - tf_workspace != 'default'
        msg: "'tf_workspace' must be defined and not 'default'"

    - name: Create a dedicated keypair
      openssh_keypair:
        path: "{{ ssh_private_key_file }}"
        type: ed25519

    - name: "Apply workspace {{ tf_workspace }} on {{ tf_stack }}"
      terraform:
        project_path: "{{ tf_stack_dir }}"
        state: present
        force_init: true
        workspace: "{{ tf_workspace }}"
        variables:
          ssh_public_key_file: "{{ ssh_public_key_file }}"
      register: tf_apply

    - set_fact:
        public_ipv4: "{{ tf_apply.outputs.ipv4.value }}"
        public_ipv6: "{{ tf_apply.outputs.ipv6.value }}"
        raw_ssh_user: "{{ tf_apply.outputs.raw_ssh_user.value }}"

    - name: Create host vars directory
      file:
        path: "{{ item }}"
        state: directory
      loop:
        - "{{ raw_host_vars_dir }}"
        - "{{ ready_host_vars_dir }}"

    - name: Render host vars file
      copy:
        dest: "{{ item }}"
        content: |
          ---
          caretaker_authorized_key_files:
            - "{{ ssh_public_key_file }}"
          public_ipv4: "{{ tf_apply.outputs.ipv4.value }}"
          public_ipv6: "{{ tf_apply.outputs.ipv6.value }}"
      loop:
        - "{{ raw_host_vars_file }}"
        - "{{ ready_host_vars_file }}"

    - name: Add raw and ready host definitions to inventory group
      blockinfile:
        path: "{{ project_dir }}/hosts"
        state: present
        create: yes
        marker: "# {mark} -- playbooks/create_cloud_host.yml -- {{ tf_workspace }}"
        block: |
          [{{ clan_name }}]
          {{ raw_host_name }} ansible_ssh_host={{ public_ipv4 }} ansible_ssh_user={{ raw_ssh_user }}
          {{ ready_host_name }}  ansible_ssh_host={{ public_ipv4 }} ansible_ssh_user=caretaker 

          [{{ clan_name }}:vars]
          ansible_host_key_checking=False
          ansible_ssh_private_key_file={{ ssh_private_key_file }}

    - name: Link created host group to 'clans' group in inventory
      lineinfile:
        path: "{{ project_dir }}/hosts"
        state: present
        line: >-
          {{ clan_name }}
        insertafter: >-
          \[clans:children\]


