---
- name: Check existence of Matrix network in Docker
  shell:
    cmd: "docker network ls -q --filter='name=^{{ matrix_docker_network }}$'"
  register: result_check_docker_network
  changed_when: false
  check_mode: no

- name: Create Matrix network in Docker
  shell:
    cmd: "docker network create --driver=bridge {{ matrix_docker_network }}"
  when: "result_check_docker_network.stdout == '' and not ansible_check_mode"

- pip:
    name: docker
- name: Ensure Dimension base path exists
  file:
    path: "{{ matrix_dimension_base_path }}"
    state: directory
    mode: 0770
    owner: "{{ matrix_user_username }}"
    group: "{{ matrix_dimension_user_gid }}"

- name: Ensure Dimension config installed
  template:
    src: "{{ _matrix_dimension_config_template }}"
    dest: "/matrix/dimension/config.yaml"
    mode: 0640
    owner: "{{ matrix_user_username }}"
    group: "{{ matrix_dimension_user_gid }}"
  notify: Restart dimension service

- name: Ensure Dimension image is pulled
  docker_image:
    name: "{{ matrix_dimension_docker_image }}"
    source: "{{ 'pull' if ansible_version.major > 2 or ansible_version.minor > 7 else omit }}"
    force_source: "{{ matrix_dimension_docker_image_force_pull if ansible_version.major > 2 or ansible_version.minor >= 8 else omit }}"
    force: "{{ omit if ansible_version.major > 2 or ansible_version.minor >= 8 else matrix_dimension_docker_image_force_pull }}"

- name: Render dimension service
  template:
    src: "{{ _matrix_dimension_systemd_template }}"
    dest: "{{ _matrix_dimension_systemd_dest }}"
    mode: 0644
  register: matrix_dimension_systemd_service_result
  notify: Restart dimension service

- name: Render dimension service
  systemd:
    name: "matrix-dimension"
    state: started
    daemon_reload: yes
    enabled: yes

- meta: flush_handlers